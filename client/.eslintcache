[{"/Users/sergejkosilov/Desktop/testReactFront/client/src/index.js":"1","/Users/sergejkosilov/Desktop/testReactFront/client/src/App.js":"2","/Users/sergejkosilov/Desktop/testReactFront/client/src/reportWebVitals.js":"3","/Users/sergejkosilov/Desktop/testReactFront/client/src/components/Footer/Footer.js":"4","/Users/sergejkosilov/Desktop/testReactFront/client/src/components/Header/Header.js":"5","/Users/sergejkosilov/Desktop/testReactFront/client/src/components/ItemImage/ItemImage.js":"6","/Users/sergejkosilov/Desktop/testReactFront/client/src/components/ListImage/ListImage.js":"7","/Users/sergejkosilov/Desktop/testReactFront/client/src/components/ModalView/ModalView.js":"8","/Users/sergejkosilov/Desktop/testReactFront/client/src/components/ModalChat/ModalChat.js":"9","/Users/sergejkosilov/Desktop/testReactFront/client/src/components/ModalForm/ModalForm.js":"10","/Users/sergejkosilov/Desktop/testReactFront/client/src/components/ModalChat/ModalChatMessage.js":"11","/Users/sergejkosilov/Desktop/testReactFront/client/src/redux/state.js":"12","/Users/sergejkosilov/Desktop/testReactFront/client/src/redux/render.js":"13","/Users/sergejkosilov/Desktop/testReactFront/client/src/store/configureStore.js":"14","/Users/sergejkosilov/Desktop/testReactFront/client/src/reducers/index.js":"15","/Users/sergejkosilov/Desktop/testReactFront/client/src/redux/redux-store.js":"16"},{"size":786,"mtime":1611023715351,"results":"17","hashOfConfig":"18"},{"size":1071,"mtime":1611022156650,"results":"19","hashOfConfig":"18"},{"size":362,"mtime":1610723077679,"results":"20","hashOfConfig":"18"},{"size":275,"mtime":1610915099984,"results":"21","hashOfConfig":"18"},{"size":188,"mtime":1610905109993,"results":"22","hashOfConfig":"18"},{"size":489,"mtime":1611025128829,"results":"23","hashOfConfig":"18"},{"size":628,"mtime":1611022125713,"results":"24","hashOfConfig":"18"},{"size":816,"mtime":1611020704701,"results":"25","hashOfConfig":"18"},{"size":416,"mtime":1610974625679,"results":"26","hashOfConfig":"18"},{"size":1220,"mtime":1611025091183,"results":"27","hashOfConfig":"18"},{"size":312,"mtime":1610959413437,"results":"28","hashOfConfig":"18"},{"size":1606,"mtime":1611025396238,"results":"29","hashOfConfig":"18"},{"size":770,"mtime":1611024792198,"results":"30","hashOfConfig":"18"},{"size":152,"mtime":1611021630427,"results":"31","hashOfConfig":"18"},{"size":878,"mtime":1611021578508,"results":"32","hashOfConfig":"18"},{"size":0,"mtime":1611023868693,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"37"},"1kcctju",{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"37"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"37"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"37"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"37"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},"/Users/sergejkosilov/Desktop/testReactFront/client/src/index.js",["73"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from './redux/redux-store'\nimport state from './redux/state'\nimport {addComment, updateNewComment, stateModal} from './redux/state'\n\n\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App  appState={state}\n          addComment={addComment} \n          updateNewComment={updateNewComment}\n          stateModal={stateModal}\n    />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["74","75"],"/Users/sergejkosilov/Desktop/testReactFront/client/src/App.js",[],"/Users/sergejkosilov/Desktop/testReactFront/client/src/reportWebVitals.js",[],"/Users/sergejkosilov/Desktop/testReactFront/client/src/components/Footer/Footer.js",[],"/Users/sergejkosilov/Desktop/testReactFront/client/src/components/Header/Header.js",[],"/Users/sergejkosilov/Desktop/testReactFront/client/src/components/ItemImage/ItemImage.js",["76"],"import React from 'react'\nimport './ItemImage.css'\n\n\nconst ItemImage = (props) => {\n\n//   let changeComment = (text) => {\n//     // let text = newCurrenComment.current.value\n//     props.updateNewComment(text)\n// }\n\n\n    let imageClick = (id) =>  {\n        console.log(id)\n        props.stateModal()\n      } \n    return (\n      <div className='imageItem' >\n       <img src={props.urlImage}  onClick={ imageClick(props.idImage)}/>\n      </div>\n  \n    )\n  }\n  \n  export default ItemImage;\n  ","/Users/sergejkosilov/Desktop/testReactFront/client/src/components/ListImage/ListImage.js",[],"/Users/sergejkosilov/Desktop/testReactFront/client/src/components/ModalView/ModalView.js",["77"],"import React from 'react'\nimport ModalChat from '../ModalChat/ModalChat';\nimport ModalForm from '../ModalForm/ModalForm';\nimport './ModalView.css'\n\n\nconst ModalView = (props) => {\n    return (\n      <div className={`modal_view ${props.isOpenedModal ? 'open' : 'close'}`} >\n        <div className='modal_body'>\n            <img className='image_modal' src='https://picsum.photos/id/242/300/200'></img>\n            <ModalChat comments={props.comments}/>\n            <ModalForm  \n                        form={props.form}\n                        addComment={props.addComment}\n                        updateNewComment={props.updateNewComment}\n            />\n            <div className='modal_close' onClick={props.stateModal}>×</div>\n          \n        </div>\n      </div>\n  \n    )\n  }\n  \n  export default ModalView;\n  ","/Users/sergejkosilov/Desktop/testReactFront/client/src/components/ModalChat/ModalChat.js",[],"/Users/sergejkosilov/Desktop/testReactFront/client/src/components/ModalForm/ModalForm.js",["78"],"import React from 'react'\nimport './ModalForm.css'\n\n\nconst ModalForm = (props) => {\n    // addComment={props.addComment}\n    // updateNewComment={props.updateNewComment}\n    let addComment = () => {\n        props.addComment()\n        props.updateNewComment('')\n    }\n\n    let addCommentButton = () => {\n        props.addComment();\n    }\n\n\n    let newCurrenComment = React.createRef()\n\n    let changeComment = (text) => {\n        // let text = newCurrenComment.current.value\n        props.updateNewComment(text)\n    }\n   \n    return (\n  \n        <div className='modal_form'>\n           <textarea    onChange \n                        className='input_param'     \n                        value={props.form.userName}>\n            </textarea>\n           <textarea    className='input_param' \n                        onChange={() => changeComment(newCurrenComment)}\n                        value={props.form.textUserComment}\n                        >\n            </textarea>\n           <button  className='button_send_comment' \n                    onClick={ addCommentButton }>\n                    Оставить комментарий\n            </button>\n        </div>\n    \n  \n    )\n  }\n  \n  export default ModalForm;\n  ","/Users/sergejkosilov/Desktop/testReactFront/client/src/components/ModalChat/ModalChatMessage.js",[],"/Users/sergejkosilov/Desktop/testReactFront/client/src/redux/state.js",["79","80"],"/Users/sergejkosilov/Desktop/testReactFront/client/src/redux/render.js",["81"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport state from './state'\nimport App from '../App'\nimport {addComment, updateNewComment, stateModal} from './state'\n\n\n\n\nexport let rerenderEntireTree = (state) => {\n    console.log(state)\n    ReactDOM.render(\n        <React.StrictMode>\n          <App  appState={state}\n          addComment={addComment} \n          updateNewComment={updateNewComment}\n          stateModal={stateModal}\n    />\n        </React.StrictMode>,\n        document.getElementById('root'))\n};\n\n// // If you want to start measuring performance in your app, pass a function\n// // to log results (for example: reportWebVitals(console.log))\n// // or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();","/Users/sergejkosilov/Desktop/testReactFront/client/src/store/configureStore.js",[],["82","83"],"/Users/sergejkosilov/Desktop/testReactFront/client/src/reducers/index.js",[],"/Users/sergejkosilov/Desktop/testReactFront/client/src/redux/redux-store.js",[],{"ruleId":"84","severity":1,"message":"85","line":6,"column":8,"nodeType":"86","messageId":"87","endLine":6,"endColumn":13},{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","severity":1,"message":"93","line":19,"column":8,"nodeType":"94","endLine":19,"endColumn":73},{"ruleId":"92","severity":1,"message":"93","line":11,"column":13,"nodeType":"94","endLine":11,"endColumn":85},{"ruleId":"84","severity":1,"message":"95","line":8,"column":9,"nodeType":"86","messageId":"87","endLine":8,"endColumn":19},{"ruleId":"96","severity":1,"message":"97","line":28,"column":5,"nodeType":"98","messageId":"99","endLine":29,"endColumn":34},{"ruleId":"96","severity":1,"message":"100","line":30,"column":5,"nodeType":"98","messageId":"101","endLine":31,"endColumn":32},{"ruleId":"84","severity":1,"message":"102","line":3,"column":8,"nodeType":"86","messageId":"87","endLine":3,"endColumn":13},{"ruleId":"88","replacedBy":"103"},{"ruleId":"90","replacedBy":"104"},"no-unused-vars","'store' is defined but never used.","Identifier","unusedVar","no-native-reassign",["105"],"no-negated-in-lhs",["106"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'addComment' is assigned a value but never used.","no-fallthrough","Expected a 'break' statement before 'case'.","SwitchCase","case","Expected a 'break' statement before 'default'.","default","'state' is defined but never used.",["105"],["106"],"no-global-assign","no-unsafe-negation"]