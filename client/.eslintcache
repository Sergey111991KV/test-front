[{"/Users/sergejkosilov/Desktop/testReactFront/client/src/index.js":"1","/Users/sergejkosilov/Desktop/testReactFront/client/src/App.js":"2","/Users/sergejkosilov/Desktop/testReactFront/client/src/reportWebVitals.js":"3","/Users/sergejkosilov/Desktop/testReactFront/client/src/components/Footer/Footer.js":"4","/Users/sergejkosilov/Desktop/testReactFront/client/src/components/Header/Header.js":"5","/Users/sergejkosilov/Desktop/testReactFront/client/src/components/ItemImage/ItemImage.js":"6","/Users/sergejkosilov/Desktop/testReactFront/client/src/components/ListImage/ListImage.js":"7","/Users/sergejkosilov/Desktop/testReactFront/client/src/components/ModalView/ModalView.js":"8","/Users/sergejkosilov/Desktop/testReactFront/client/src/components/ModalChat/ModalChat.js":"9","/Users/sergejkosilov/Desktop/testReactFront/client/src/components/ModalForm/ModalForm.js":"10","/Users/sergejkosilov/Desktop/testReactFront/client/src/components/ModalChat/ModalChatMessage.js":"11","/Users/sergejkosilov/Desktop/testReactFront/client/src/redux/redux-store.js":"12","/Users/sergejkosilov/Desktop/testReactFront/client/src/redux/store.js":"13"},{"size":1077,"mtime":1611201237639,"results":"14","hashOfConfig":"15"},{"size":873,"mtime":1611197287720,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":1610723077679,"results":"17","hashOfConfig":"15"},{"size":275,"mtime":1610915099984,"results":"18","hashOfConfig":"15"},{"size":188,"mtime":1610905109993,"results":"19","hashOfConfig":"15"},{"size":491,"mtime":1611201185775,"results":"20","hashOfConfig":"15"},{"size":517,"mtime":1611201185776,"results":"21","hashOfConfig":"15"},{"size":995,"mtime":1611201185775,"results":"22","hashOfConfig":"15"},{"size":429,"mtime":1611167712481,"results":"23","hashOfConfig":"15"},{"size":3127,"mtime":1611201185775,"results":"24","hashOfConfig":"15"},{"size":350,"mtime":1611039904129,"results":"25","hashOfConfig":"15"},{"size":0,"mtime":1611023868693,"results":"26","hashOfConfig":"15"},{"size":3866,"mtime":1611201181555,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1kcctju",{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"32"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"32"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"32"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"/Users/sergejkosilov/Desktop/testReactFront/client/src/index.js",[],"/Users/sergejkosilov/Desktop/testReactFront/client/src/App.js",[],["59","60"],"/Users/sergejkosilov/Desktop/testReactFront/client/src/reportWebVitals.js",[],"/Users/sergejkosilov/Desktop/testReactFront/client/src/components/Footer/Footer.js",[],"/Users/sergejkosilov/Desktop/testReactFront/client/src/components/Header/Header.js",[],"/Users/sergejkosilov/Desktop/testReactFront/client/src/components/ItemImage/ItemImage.js",["61"],"import React from 'react'\nimport './ItemImage.css'\nimport {openModalCreator,getTouchObjectImageCreator} from '../../redux/store'\n\n\n\n\nconst ItemImage = (props) => {\n\n\n\n    let imageClick = (id) =>  {\n        props.dispatch(openModalCreator(id))\n        props.dispatch(getTouchObjectImageCreator())\n      } \n    return (\n      <div className='imageItem' >\n       <img src={props.urlImage}  onClick={() => imageClick(props.idImage)}/>\n      </div>\n  \n    )\n  }\n  \n  export default ItemImage;\n  ","/Users/sergejkosilov/Desktop/testReactFront/client/src/components/ListImage/ListImage.js",[],"/Users/sergejkosilov/Desktop/testReactFront/client/src/components/ModalView/ModalView.js",["62"],"import React from 'react'\nimport ModalChat from '../ModalChat/ModalChat';\nimport ModalForm from '../ModalForm/ModalForm';\nimport './ModalView.css'\nimport {closeModalViewCreator} from '../../redux/store'\n\n\nconst ModalView = (props) => {\n \n  let closeClick = () =>  {\n   \n    props.dispatch(closeModalViewCreator())\n  } \n \n\n    return (\n      <div className={`modal_view ${props.isOpenedModal ? 'open' : 'close'}`} >\n        <div className='modal_body'>\n            <img className='image_modal' src={props.touchObjectImage.url}></img>\n            <ModalChat comments={props.touchObjectImage.comments}/>\n            <ModalForm  \n                        textUserName = {props.textUserName}\n                        textUserComment={props.textUserComment}\n                        dispatch={props.dispatch}\n                       \n            />\n            <div className='modal_close' onClick={closeClick}>×</div>\n          \n        </div>\n      </div>\n  \n    )\n  }\n  \n  export default ModalView;\n  ","/Users/sergejkosilov/Desktop/testReactFront/client/src/components/ModalChat/ModalChat.js",[],"/Users/sergejkosilov/Desktop/testReactFront/client/src/components/ModalForm/ModalForm.js",["63"],"// import React from 'react'\n// import './ModalForm.css'\n\n\n// let addCommentActionCreator = () => {\n//     return {\n//         type: 'ADD-COMMENT'\n//     }\n// }\n\n\n\n// const ModalForm = (props) => {\n//     // addComment={props.addComment}\n//     // updateNewComment={props.updateNewComment}\n//     // let addComment = () => {\n//     //     props.addComment()\n//     //     props.updateNewComment('')\n//     // }\n\n//     let addCommentButton = () => {\n//         props.dispatch(addCommentActionCreator());\n//     }\n\n\n//     let newCurrenComment = React.createRef()\n\n//     let changeComment = () => {\n//         let text = newCurrenComment.current.value\n//         console.log(text)\n//         props.updateNewComment(text)\n//     }\n   \n//     return (\n  \n//         <div className='modal_form'>\n//            <textarea    onChange \n//                         className='input_param'\n//                         placeholder=\"Ваше имя\" \n//                         onChange={() => changeComment()}    \n//                         textUserName={props.textUserName}>\n//             </textarea>\n//            <textarea    className='input_param' \n//                         placeholder=\"Ваш комментарий\"\n//                         onChange={() => changeComment()}\n//                         ref={newCurrenComment}\n//                         textUserComment={props.textUserComment}\n//                         >\n//             </textarea>\n//            <button  className='button_send_comment' \n//                     onClick={ addCommentButton }>\n//                     Оставить комментарий\n//             </button>\n//         </div>\n    \n  \n//     )\n//   }\n  \n//   export default ModalForm;\n  \n\n  import React from 'react'\nimport './ModalForm.css'\nimport {updateNameUserCreator,updateTextCommentCreator,sendCommentCreator} from '../../redux/store'\n\n\n\n\nconst ModalForm = (props) => {\n\n\n    let changeNameUser = (e) => {\n        let body = e.target.value\n        props.dispatch(updateNameUserCreator(body))\n    }\n\n    let changeComment = (e) => {\n        let body = e.target.value\n        props.dispatch(updateTextCommentCreator(body))\n    }\n\n    let addCommentButton = () => {\n        props.dispatch(sendCommentCreator());\n    }\n\n    return (\n  \n        <div className='modal_form'>\n           <textarea    onChange \n                        className='input_param'\n                        placeholder=\"Ваше имя\" \n                        onChange={ changeNameUser} \n                        value={props.textUserName}   \n                        >\n            </textarea>\n           <textarea    className='input_param' \n                        placeholder=\"Ваш комментарий\"\n                        onChange={ changeComment}\n                        value={props.textUserComment}\n                        >\n            </textarea>\n           <button  className='button_send_comment' \n                    onClick={ addCommentButton }>\n                    Оставить комментарий\n            </button>\n        </div>\n    \n  \n    )\n  }\n  \n  export default ModalForm;\n  ","/Users/sergejkosilov/Desktop/testReactFront/client/src/components/ModalChat/ModalChatMessage.js",[],"/Users/sergejkosilov/Desktop/testReactFront/client/src/redux/redux-store.js",[],["64","65"],"/Users/sergejkosilov/Desktop/testReactFront/client/src/redux/store.js",[],{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","severity":1,"message":"71","line":18,"column":8,"nodeType":"72","endLine":18,"endColumn":78},{"ruleId":"70","severity":1,"message":"71","line":19,"column":13,"nodeType":"72","endLine":19,"endColumn":75},{"ruleId":"73","severity":1,"message":"74","line":93,"column":25,"nodeType":"75","endLine":93,"endColumn":51},{"ruleId":"66","replacedBy":"76"},{"ruleId":"68","replacedBy":"77"},"no-native-reassign",["78"],"no-negated-in-lhs",["79"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute",["78"],["79"],"no-global-assign","no-unsafe-negation"]